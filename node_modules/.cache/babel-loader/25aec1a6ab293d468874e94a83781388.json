{"ast":null,"code":"var _jsxFileName = \"/Users/himanshuk/Desktop/NewCompare/compare-products-react-redux/src/components/TableComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeProduct } from \"../actions/index\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\n\nclass TableComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeProduct = product => {\n      this.props.removeProduct(product);\n    };\n  }\n\n  render() {\n    return React.createElement(Col, {\n      md: {\n        span: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Table, {\n      hover: true,\n      className: \"tableProducts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Name\"), this.props.products.map(product => {\n      return (// <tr key={product.id}>\n        React.createElement(\"td\", {\n          key: product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, product.name)\n      );\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeProduct\n})(TableComponent);","map":{"version":3,"sources":["/Users/himanshuk/Desktop/NewCompare/compare-products-react-redux/src/components/TableComponent.js"],"names":["React","connect","removeProduct","Col","Table","TableComponent","Component","product","props","render","span","offset","products","map","id","name","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAC3CJ,aAD2C,GAC3BK,OAAO,IAAI;AACzB,WAAKC,KAAL,CAAWN,aAAX,CAAyBK,OAAzB;AACD,KAH0C;AAAA;;AAK3CE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,GAApB,CAAwBN,OAAO,IAAI;AACpC,aACE;AACE;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACO,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBP,OAAO,CAACQ,IAA9B;AAFJ;AAID,KALE,CAFH,CADF,CADF,CADF,CADF;AAmCD;;AAzC0C;;AA4C7C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,QAAQ,EAAEK,KAAK,CAACL;AADX,GAAP;AAGD,CAJD;;AAMA,eAAeX,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbG,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeProduct } from \"../actions/index\";\nimport Col from \"react-bootstrap/Col\";\nimport Table from \"react-bootstrap/Table\";\n\nclass TableComponent extends React.Component {\n  removeProduct = product => {\n    this.props.removeProduct(product);\n  };\n\n  render() {\n    return (\n      <Col md={{ span: 10, offset: 1 }}>\n        <Table hover className=\"tableProducts\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              {this.props.products.map(product => {\n              return (\n                // <tr key={product.id}>\n                  <td key={product.id}>{product.name}</td>\n              );\n            })}\n              {/* <th>Price($)</th>\n              <th>Calories(cal)</th>\n              <th>Colour</th>\n              <th>Quantity(gr)</th> */}\n            </tr>\n          </thead>\n          {/* <tbody>\n            {this.props.products.map(product => {\n              return (\n                <tr key={product.id}>\n                  <td>{product.id}</td>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td>{product.calories}</td>\n                  <td>{product.colour}</td>\n                  <td>{product.quantity}</td>\n                </tr>\n              );\n            })}\n          </tbody> */}\n        </Table>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { removeProduct }\n)(TableComponent);\n"]},"metadata":{},"sourceType":"module"}